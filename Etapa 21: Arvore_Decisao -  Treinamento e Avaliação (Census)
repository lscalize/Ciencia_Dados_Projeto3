from sklearn.metrics import accuracy_score, classification_report
from yellowbrick.classifier import ConfusionMatrix
import pickle
from sklearn import tree
import matplotlib.pyplot as plt

# Carregando a base do censo
with open('/content/census.pkl', 'rb') as f:
    x_census_treinamento, y_census_treinamento, x_census_teste, y_census_teste = pickle.load(f)

# Inicializando e treinando o classificador de árvore de decisão
arvore_census = DecisionTreeClassifier(criterion='entropy', random_state=0)
arvore_census.fit(x_census_treinamento, y_census_treinamento)

# Realizando previsões
previsoes = arvore_census.predict(x_census_teste)

# Avaliando o modelo
print("Acurácia:", accuracy_score(y_census_teste, previsoes))
print("Relatório de Classificação:\n", classification_report(y_census_teste, previsoes))

# Matriz de confusão
cm = ConfusionMatrix(arvore_census)
cm.fit(x_census_treinamento, y_census_treinamento)
cm.score(x_census_teste, y_census_teste)
